{
  "contractName": "Migrator",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fromAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toAsset",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fromAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fromDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fromAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAsset\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/atlas-bridge/ethereum/contracts/bridge/utils/Migrator.sol\":\"Migrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/atlas-bridge/ethereum/contracts/bridge/utils/Migrator.sol\":{\"keccak256\":\"0x544397345a58ec116fae8fffed96d88df1612a7812573f08dd027571d2dc73b0\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://a6b159ea0091033836699487d53931173711f154f7a022e1be35597403f7d5a4\",\"dweb:/ipfs/QmNffCjn2GCYqKpmKc8ZK3XLmP8CNWDXWYBusaGpzsNvPe\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620014f8380380620014f88339810160408190526200003491620002a6565b604080518082018252601481527f546f6b656e204d6967726174696f6e20506f6f6c00000000000000000000000060208083019182528351808501909452600b84526a04d69677261746f722d4c560ac1b9084015281519192916200009c91600391620001e3565b508051620000b2906004906020840190620001e3565b5050600580546001600160a01b038086166001600160a01b0319928316811790935560068054918616919092161790556040805163313ce56760e01b8152905191925063313ce567916004808301926020929190829003018186803b1580156200011b57600080fd5b505afa15801562000130573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001569190620002dd565b60ff16600781905550806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200019957600080fd5b505afa158015620001ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d49190620002dd565b60ff1660085550620003449050565b828054620001f19062000307565b90600052602060002090601f01602090048101928262000215576000855562000260565b82601f106200023057805160ff191683800117855562000260565b8280016001018555821562000260579182015b828111156200026057825182559160200191906001019062000243565b506200026e92915062000272565b5090565b5b808211156200026e576000815560010162000273565b80516001600160a01b0381168114620002a157600080fd5b919050565b60008060408385031215620002b9578182fd5b620002c48362000289565b9150620002d46020840162000289565b90509250929050565b600060208284031215620002ef578081fd5b815160ff8116811462000300578182fd5b9392505050565b600181811c908216806200031c57607f821691505b602082108114156200033e57634e487b7160e01b600052602260045260246000fd5b50919050565b6111a480620003546000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80634cc82215116100ad57806395d89b411161007157806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f1354c08146102c957600080fd5b80634cc82215146101e95780634d92626a146101fc57806370a082311461020557806386e898431461022e57806392e404111461025957600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a1578063379607f5146101b057806339509351146101c3578063454b0608146101d657600080fd5b806306fdde0314610126578063095ea7b3146101445780631003e2d21461016757806318160ddd1461017c575b600080fd5b61012e6102dc565b60405161013b9190610f65565b60405180910390f35b610157610152366004610ee8565b61036e565b604051901515815260200161013b565b61017a610175366004610f31565b610385565b005b6002545b60405190815260200161013b565b61015761019c366004610ead565b6103aa565b6040516012815260200161013b565b61017a6101be366004610f31565b61045b565b6101576101d1366004610ee8565b61048e565b61017a6101e4366004610f31565b6104ca565b61017a6101f7366004610f31565b610506565b61018060075481565b610180610213366004610e61565b6001600160a01b031660009081526020819052604090205490565b600554610241906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61018060085481565b61012e610527565b610157610278366004610ee8565b610536565b61015761028b366004610ee8565b6105cf565b61018061029e366004610e7b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600654610241906001600160a01b031681565b6060600380546102eb9061111d565b80601f01602080910402602001604051908101604052809291908181526020018280546103179061111d565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b5050505050905090565b600061037b3384846105dc565b5060015b92915050565b60065461039d906001600160a01b0316333084610701565b6103a73382610772565b50565b60006103b7848484610851565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104415760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61044e85338584036105dc565b60019150505b9392505050565b6104653382610a1f565b6005546008546007546103a7926001600160a01b0316913391610489919086610b6a565b610bcb565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161037b9185906104c5908690610f98565b6105dc565b6005546104e2906001600160a01b0316333084610701565b6006546007546008546103a7926001600160a01b0316913391610489919086610b6a565b6105103382610a1f565b6006546103a7906001600160a01b03163383610bcb565b6060600480546102eb9061111d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610438565b6105c533858584036105dc565b5060019392505050565b600061037b338484610851565b6001600160a01b03831661063e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610438565b6001600160a01b03821661069f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610438565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6040516001600160a01b038085166024830152831660448201526064810182905261076c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bfb565b50505050565b6001600160a01b0382166107c85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610438565b80600260008282546107da9190610f98565b90915550506001600160a01b03821660009081526020819052604081208054839290610807908490610f98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166108b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610438565b6001600160a01b0382166109175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610438565b6001600160a01b0383166000908152602081905260409020548181101561098f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610438565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109c6908490610f98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a1291815260200190565b60405180910390a361076c565b6001600160a01b038216610a7f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610438565b6001600160a01b03821660009081526020819052604090205481811015610af35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610438565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b229084906110da565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106f4565b505050565b600082841115610b9a57610b7e83856110da565b610b8990600a611013565b610b939083610fb0565b9150610bc4565b82841015610bc457610bac84846110da565b610bb790600a611013565b610bc190836110bb565b91505b5092915050565b6040516001600160a01b038316602482015260448101829052610b6590849063a9059cbb60e01b90606401610735565b6000610c50826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ccd9092919063ffffffff16565b805190915015610b655780806020019051810190610c6e9190610f11565b610b655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610438565b6060610cdc8484600085610ce4565b949350505050565b606082471015610d455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610438565b843b610d935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610438565b600080866001600160a01b03168587604051610daf9190610f49565b60006040518083038185875af1925050503d8060008114610dec576040519150601f19603f3d011682016040523d82523d6000602084013e610df1565b606091505b5091509150610e01828286610e0c565b979650505050505050565b60608315610e1b575081610454565b825115610e2b5782518084602001fd5b8160405162461bcd60e51b81526004016104389190610f65565b80356001600160a01b0381168114610e5c57600080fd5b919050565b600060208284031215610e72578081fd5b61045482610e45565b60008060408385031215610e8d578081fd5b610e9683610e45565b9150610ea460208401610e45565b90509250929050565b600080600060608486031215610ec1578081fd5b610eca84610e45565b9250610ed860208501610e45565b9150604084013590509250925092565b60008060408385031215610efa578182fd5b610f0383610e45565b946020939093013593505050565b600060208284031215610f22578081fd5b81518015158114610454578182fd5b600060208284031215610f42578081fd5b5035919050565b60008251610f5b8184602087016110f1565b9190910192915050565b6020815260008251806020840152610f848160408501602087016110f1565b601f01601f19169190910160400192915050565b60008219821115610fab57610fab611158565b500190565b600082610fcb57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561100b578160001904821115610ff157610ff1611158565b80851615610ffe57918102915b93841c9390800290610fd5565b509250929050565b600061045483836000826110295750600161037f565b816110365750600061037f565b816001811461104c576002811461105657611072565b600191505061037f565b60ff84111561106757611067611158565b50506001821b61037f565b5060208310610133831016604e8410600b8410161715611095575081810a61037f565b61109f8383610fd0565b80600019048211156110b3576110b3611158565b029392505050565b60008160001904831182151516156110d5576110d5611158565b500290565b6000828210156110ec576110ec611158565b500390565b60005b8381101561110c5781810151838201526020016110f4565b8381111561076c5750506000910152565b600181811c9082168061113157607f821691505b6020821081141561115257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200d059b77eb871f2cf0e66da689323dc377ff2b473a449389e54afffa599b6d0d64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80634cc82215116100ad57806395d89b411161007157806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f1354c08146102c957600080fd5b80634cc82215146101e95780634d92626a146101fc57806370a082311461020557806386e898431461022e57806392e404111461025957600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a1578063379607f5146101b057806339509351146101c3578063454b0608146101d657600080fd5b806306fdde0314610126578063095ea7b3146101445780631003e2d21461016757806318160ddd1461017c575b600080fd5b61012e6102dc565b60405161013b9190610f65565b60405180910390f35b610157610152366004610ee8565b61036e565b604051901515815260200161013b565b61017a610175366004610f31565b610385565b005b6002545b60405190815260200161013b565b61015761019c366004610ead565b6103aa565b6040516012815260200161013b565b61017a6101be366004610f31565b61045b565b6101576101d1366004610ee8565b61048e565b61017a6101e4366004610f31565b6104ca565b61017a6101f7366004610f31565b610506565b61018060075481565b610180610213366004610e61565b6001600160a01b031660009081526020819052604090205490565b600554610241906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61018060085481565b61012e610527565b610157610278366004610ee8565b610536565b61015761028b366004610ee8565b6105cf565b61018061029e366004610e7b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600654610241906001600160a01b031681565b6060600380546102eb9061111d565b80601f01602080910402602001604051908101604052809291908181526020018280546103179061111d565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b5050505050905090565b600061037b3384846105dc565b5060015b92915050565b60065461039d906001600160a01b0316333084610701565b6103a73382610772565b50565b60006103b7848484610851565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104415760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61044e85338584036105dc565b60019150505b9392505050565b6104653382610a1f565b6005546008546007546103a7926001600160a01b0316913391610489919086610b6a565b610bcb565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161037b9185906104c5908690610f98565b6105dc565b6005546104e2906001600160a01b0316333084610701565b6006546007546008546103a7926001600160a01b0316913391610489919086610b6a565b6105103382610a1f565b6006546103a7906001600160a01b03163383610bcb565b6060600480546102eb9061111d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610438565b6105c533858584036105dc565b5060019392505050565b600061037b338484610851565b6001600160a01b03831661063e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610438565b6001600160a01b03821661069f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610438565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6040516001600160a01b038085166024830152831660448201526064810182905261076c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bfb565b50505050565b6001600160a01b0382166107c85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610438565b80600260008282546107da9190610f98565b90915550506001600160a01b03821660009081526020819052604081208054839290610807908490610f98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166108b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610438565b6001600160a01b0382166109175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610438565b6001600160a01b0383166000908152602081905260409020548181101561098f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610438565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109c6908490610f98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a1291815260200190565b60405180910390a361076c565b6001600160a01b038216610a7f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610438565b6001600160a01b03821660009081526020819052604090205481811015610af35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610438565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b229084906110da565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106f4565b505050565b600082841115610b9a57610b7e83856110da565b610b8990600a611013565b610b939083610fb0565b9150610bc4565b82841015610bc457610bac84846110da565b610bb790600a611013565b610bc190836110bb565b91505b5092915050565b6040516001600160a01b038316602482015260448101829052610b6590849063a9059cbb60e01b90606401610735565b6000610c50826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ccd9092919063ffffffff16565b805190915015610b655780806020019051810190610c6e9190610f11565b610b655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610438565b6060610cdc8484600085610ce4565b949350505050565b606082471015610d455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610438565b843b610d935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610438565b600080866001600160a01b03168587604051610daf9190610f49565b60006040518083038185875af1925050503d8060008114610dec576040519150601f19603f3d011682016040523d82523d6000602084013e610df1565b606091505b5091509150610e01828286610e0c565b979650505050505050565b60608315610e1b575081610454565b825115610e2b5782518084602001fd5b8160405162461bcd60e51b81526004016104389190610f65565b80356001600160a01b0381168114610e5c57600080fd5b919050565b600060208284031215610e72578081fd5b61045482610e45565b60008060408385031215610e8d578081fd5b610e9683610e45565b9150610ea460208401610e45565b90509250929050565b600080600060608486031215610ec1578081fd5b610eca84610e45565b9250610ed860208501610e45565b9150604084013590509250925092565b60008060408385031215610efa578182fd5b610f0383610e45565b946020939093013593505050565b600060208284031215610f22578081fd5b81518015158114610454578182fd5b600060208284031215610f42578081fd5b5035919050565b60008251610f5b8184602087016110f1565b9190910192915050565b6020815260008251806020840152610f848160408501602087016110f1565b601f01601f19169190910160400192915050565b60008219821115610fab57610fab611158565b500190565b600082610fcb57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561100b578160001904821115610ff157610ff1611158565b80851615610ffe57918102915b93841c9390800290610fd5565b509250929050565b600061045483836000826110295750600161037f565b816110365750600061037f565b816001811461104c576002811461105657611072565b600191505061037f565b60ff84111561106757611067611158565b50506001821b61037f565b5060208310610133831016604e8410600b8410161715611095575081810a61037f565b61109f8383610fd0565b80600019048211156110b3576110b3611158565b029392505050565b60008160001904831182151516156110d5576110d5611158565b500290565b6000828210156110ec576110ec611158565b500390565b60005b8381101561110c5781810151838201526020016110f4565b8381111561076c5750506000910152565b600181811c9082168061113157607f821691505b6020821081141561115257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200d059b77eb871f2cf0e66da689323dc377ff2b473a449389e54afffa599b6d0d64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1184:7",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:7",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:7"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:7",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:7",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:7"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:7"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:7"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:7",
                "type": ""
              }
            ],
            "src": "14:177:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:205:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "349:6:7"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "357:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "304:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "375:50:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "385:29:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:40:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "375:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "434:59:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "478:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "489:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "474:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "474:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "444:29:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:49:7"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:7",
                "type": ""
              }
            ],
            "src": "196:303:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "583:214:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "629:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "638:6:7"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "646:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "631:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "631:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "631:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "604:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "613:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "600:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "596:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "593:2:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "664:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "683:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "677:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "677:16:7"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "668:5:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "741:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "750:6:7"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "758:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "743:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "743:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "743:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "715:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "726:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "733:4:7",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "722:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "722:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "712:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:27:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "705:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:35:7"
                  },
                  "nodeType": "YulIf",
                  "src": "702:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "776:15:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "786:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "776:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "549:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "560:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "572:6:7",
                "type": ""
              }
            ],
            "src": "504:293:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "857:325:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "867:22:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "881:1:7",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "884:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "877:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "877:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "867:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "898:38:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "928:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "924:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:12:7"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "902:18:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "975:31:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "977:27:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "991:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "999:4:7",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "987:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:17:7"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "977:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "955:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "948:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "945:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1065:111:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1086:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1093:3:7",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1098:10:7",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1089:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1089:20:7"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1079:31:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1079:31:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1130:1:7",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1133:4:7",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1123:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1123:15:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1123:15:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1158:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1161:4:7",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1151:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1151:15:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1151:15:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1021:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1044:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1052:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1041:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1041:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1018:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1015:2:7"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "837:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "846:6:7",
                "type": ""
              }
            ],
            "src": "802:380:7"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11878:7",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:7",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:7"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:7",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:7",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:7"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:7"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:7"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:7",
                "type": ""
              }
            ],
            "src": "14:173:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:7"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:7",
                "type": ""
              }
            ],
            "src": "192:196:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "480:183:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "526:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "535:6:7"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "543:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "528:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "528:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "528:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "501:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "522:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "490:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "590:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "571:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:29:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "609:48:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "642:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "653:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "638:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "638:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "619:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:38:7"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "609:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "438:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "449:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "461:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "469:6:7",
                "type": ""
              }
            ],
            "src": "393:270:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "772:234:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "827:6:7"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "793:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "802:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "814:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "785:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "782:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "853:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "882:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "863:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "863:29:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "853:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "901:48:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "945:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "930:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "911:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:38:7"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "901:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "958:42:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "985:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "996:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:32:7"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "958:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "722:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "733:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "745:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "753:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "761:6:7",
                "type": ""
              }
            ],
            "src": "668:338:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1098:177:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1144:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1153:6:7"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1161:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1146:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1146:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1146:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1119:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1128:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1115:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1111:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1111:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1108:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1179:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1208:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1189:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:29:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1227:42:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1254:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1265:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1250:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1250:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1237:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1237:32:7"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1056:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1067:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1079:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1087:6:7",
                "type": ""
              }
            ],
            "src": "1011:264:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1358:219:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1404:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1413:6:7"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1421:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1406:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1406:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1406:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1379:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1388:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1375:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1375:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1400:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1371:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1371:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1368:2:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1439:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1458:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1452:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:16:7"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1443:5:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1521:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1530:6:7"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1538:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1523:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1523:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1523:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1490:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1511:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1504:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1504:13:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1497:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1497:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1487:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1480:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1477:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1556:15:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1566:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1556:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1324:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1335:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1347:6:7",
                "type": ""
              }
            ],
            "src": "1280:297:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1652:120:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1698:26:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1707:6:7"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1715:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1700:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1700:22:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1700:22:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1673:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1669:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1694:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1665:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1665:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1662:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1733:33:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1756:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1743:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1743:23:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1733:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1618:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1629:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1641:6:7",
                "type": ""
              }
            ],
            "src": "1582:190:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1914:137:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1924:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1944:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1938:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:13:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1928:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1986:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1994:4:7",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1982:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:17:7"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2001:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2006:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1960:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1960:53:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1960:53:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2022:23:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2033:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2038:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2029:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2029:16:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2022:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1890:3:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1895:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1906:3:7",
                "type": ""
              }
            ],
            "src": "1777:274:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2213:218:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2223:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2235:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2246:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2231:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2231:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2223:4:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2258:29:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2276:3:7",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2281:1:7",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2272:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2272:11:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2285:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2268:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2268:19:7"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2262:2:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2303:9:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2318:6:7"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2326:2:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2314:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2314:15:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2296:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2296:34:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2350:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2361:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2346:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2346:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2370:6:7"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2378:2:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2366:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2366:15:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2339:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2339:43:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2339:43:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2402:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2413:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2398:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2398:18:7"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2418:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2391:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2391:34:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2166:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2177:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2185:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2193:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2204:4:7",
                "type": ""
              }
            ],
            "src": "2056:375:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2565:145:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2575:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2587:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2598:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2583:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2583:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2575:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2617:9:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2632:6:7"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2648:3:7",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2653:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2644:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2644:11:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2657:1:7",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2640:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2640:19:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2628:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2628:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2610:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:51:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2610:51:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2681:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2692:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2677:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2677:18:7"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2697:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2670:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2670:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2670:34:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2526:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2537:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2545:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2556:4:7",
                "type": ""
              }
            ],
            "src": "2436:274:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2810:92:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2820:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2832:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2843:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2828:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2828:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2820:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2862:9:7"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2887:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2880:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2880:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2873:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2873:22:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2855:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2855:41:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2855:41:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2779:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2790:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2801:4:7",
                "type": ""
              }
            ],
            "src": "2715:187:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3022:102:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3032:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3044:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3055:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3040:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3040:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3032:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3074:9:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3089:6:7"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3105:3:7",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3110:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3101:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3101:11:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3114:1:7",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3097:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3097:19:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3085:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3085:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3067:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3067:51:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3067:51:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$826__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2991:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3002:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3013:4:7",
                "type": ""
              }
            ],
            "src": "2907:217:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3250:262:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3267:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3278:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3260:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3260:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3260:21:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3290:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3310:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3304:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3304:13:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3294:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3337:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3348:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3333:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3333:18:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3353:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3326:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3326:34:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3395:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3403:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3391:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3391:15:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3412:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3423:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3408:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3408:18:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3428:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3369:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:66:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3369:66:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3444:62:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3460:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3479:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3487:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3475:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3475:15:7"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3496:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3492:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3492:7:7"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3471:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3471:29:7"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3456:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3456:45:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3503:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3452:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3452:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3444:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3219:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3230:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3241:4:7",
                "type": ""
              }
            ],
            "src": "3129:383:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3691:225:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3708:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3719:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3701:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3701:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3701:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3742:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3753:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3738:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3738:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3758:2:7",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3731:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3731:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3731:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3781:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3792:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3777:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3777:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3797:34:7",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3770:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3770:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3770:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3852:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3863:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3848:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3848:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3868:5:7",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3841:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3841:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3841:33:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3883:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3895:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3906:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3891:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3891:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3883:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3668:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3682:4:7",
                "type": ""
              }
            ],
            "src": "3517:399:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4095:224:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4112:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4123:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4105:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4105:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4105:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4146:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4157:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4142:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4142:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4162:2:7",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4135:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4135:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4135:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4185:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4196:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4181:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4201:34:7",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4174:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4174:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4174:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4256:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4267:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4252:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4252:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4272:4:7",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4245:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4245:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4245:32:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4286:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4298:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4309:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4294:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4286:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4072:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4086:4:7",
                "type": ""
              }
            ],
            "src": "3921:398:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4498:224:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4515:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4526:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4508:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4508:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4508:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4549:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4560:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4545:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4545:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4565:2:7",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4538:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4538:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4538:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4588:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4599:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4584:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4584:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4604:34:7",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4577:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4577:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4577:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4659:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4670:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4655:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4655:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4675:4:7",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4648:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4648:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4648:32:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4689:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4701:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4712:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4697:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4697:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4689:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4475:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4489:4:7",
                "type": ""
              }
            ],
            "src": "4324:398:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4901:228:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4918:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4929:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4911:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4911:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4911:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4952:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4963:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4948:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4948:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4968:2:7",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4941:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4941:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4941:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4991:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5002:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4987:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4987:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5007:34:7",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4980:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4980:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5062:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5073:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5058:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5058:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5078:8:7",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5051:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5051:36:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5051:36:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5096:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5108:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5119:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5104:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5104:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5096:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4878:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4892:4:7",
                "type": ""
              }
            ],
            "src": "4727:402:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5308:228:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5325:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5336:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5318:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5318:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5318:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5359:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5370:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5355:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5355:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5375:2:7",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5348:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5348:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5348:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5398:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5409:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5394:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5394:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5414:34:7",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5387:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5387:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5387:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5469:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5480:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5465:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5465:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5485:8:7",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5458:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5458:36:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5458:36:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5503:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5515:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5526:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5511:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5511:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5503:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5285:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5299:4:7",
                "type": ""
              }
            ],
            "src": "5134:402:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5715:230:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5732:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5743:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5725:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5725:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5725:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5766:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5777:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5762:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5762:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5782:2:7",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5755:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5755:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5755:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5805:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5816:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5801:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5801:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5821:34:7",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5794:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5794:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5794:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5876:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5887:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5872:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5872:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5892:10:7",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5865:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5865:38:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5865:38:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5912:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5924:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5935:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5920:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5920:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5912:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5692:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5706:4:7",
                "type": ""
              }
            ],
            "src": "5541:404:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6124:223:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6141:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6152:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6134:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6134:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6134:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6175:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6186:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6171:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6171:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6191:2:7",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6164:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6164:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6164:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6214:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6225:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6210:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6210:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6230:34:7",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6203:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6203:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6285:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6296:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6281:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6281:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6301:3:7",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6274:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6274:31:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6274:31:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6314:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6326:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6337:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6322:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6322:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6314:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6101:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6115:4:7",
                "type": ""
              }
            ],
            "src": "5950:397:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6526:227:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6543:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6554:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6536:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6536:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6536:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6577:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6588:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6573:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6573:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6593:2:7",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6566:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6566:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6566:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6616:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6627:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6612:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6612:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6632:34:7",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6605:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6605:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6605:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6687:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6698:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6683:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6683:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6703:7:7",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6676:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6676:35:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6676:35:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6720:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6732:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6743:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6728:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6728:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6720:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6503:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6517:4:7",
                "type": ""
              }
            ],
            "src": "6352:401:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6932:226:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6949:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6960:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6942:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6942:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6942:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6983:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6994:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6979:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6979:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6999:2:7",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6972:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6972:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6972:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7022:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7033:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7018:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7018:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7038:34:7",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7011:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7011:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7011:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7093:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7104:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7089:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7089:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7109:6:7",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7082:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7082:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7082:34:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7125:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7137:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7148:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7133:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7133:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7125:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6909:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6923:4:7",
                "type": ""
              }
            ],
            "src": "6758:400:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7337:179:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7354:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7365:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7347:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7347:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7347:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7388:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7399:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7384:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7384:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7404:2:7",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7377:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7377:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7377:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7427:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7438:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7423:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7423:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7443:31:7",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7416:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7416:59:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7416:59:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7484:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7496:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7507:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7492:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7492:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7484:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7314:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7328:4:7",
                "type": ""
              }
            ],
            "src": "7163:353:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7695:232:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7712:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7723:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7705:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7705:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7705:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7746:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7757:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7742:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7742:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7762:2:7",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7735:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7735:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7735:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7785:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7796:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7781:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7781:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7801:34:7",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7774:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7774:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7774:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7856:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7867:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7852:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7852:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7872:12:7",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7845:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7845:40:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7845:40:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7894:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7906:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7917:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7902:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7902:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7894:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7672:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7686:4:7",
                "type": ""
              }
            ],
            "src": "7521:406:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8106:227:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8123:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8134:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8116:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8116:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8116:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8157:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8168:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8153:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8153:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8173:2:7",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8146:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8146:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8146:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8196:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8207:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8192:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8192:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8212:34:7",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8185:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8185:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8185:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8267:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8278:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8263:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8263:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8283:7:7",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8256:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8256:35:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8256:35:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8300:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8312:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8323:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8308:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8308:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8300:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8083:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8097:4:7",
                "type": ""
              }
            ],
            "src": "7932:401:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8512:181:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8529:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8540:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8522:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8522:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8522:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8563:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8574:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8559:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8559:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8579:2:7",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8552:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8552:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8552:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8602:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8613:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8598:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8598:18:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8618:33:7",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8591:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8591:61:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8591:61:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8661:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8673:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8684:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8669:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8669:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8661:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8489:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8503:4:7",
                "type": ""
              }
            ],
            "src": "8338:355:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8799:76:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8809:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8821:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8832:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8817:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8817:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8809:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8851:9:7"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8862:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8844:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8844:25:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8844:25:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8768:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8779:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8790:4:7",
                "type": ""
              }
            ],
            "src": "8698:177:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8977:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8987:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8999:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9010:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8995:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8995:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8987:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9029:9:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9044:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9052:4:7",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9040:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9040:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9022:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9022:36:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9022:36:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8946:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8957:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8968:4:7",
                "type": ""
              }
            ],
            "src": "8880:184:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9117:80:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9144:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9146:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9146:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9146:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9133:1:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9140:1:7"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9136:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9136:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9130:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9130:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9127:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9175:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9186:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9189:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9182:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9182:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9175:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9100:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9103:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9109:3:7",
                "type": ""
              }
            ],
            "src": "9069:128:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9248:171:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9279:111:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "9300:1:7"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9307:3:7",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9312:10:7",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "9303:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9303:20:7"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9293:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9293:31:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9293:31:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9344:1:7",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9347:4:7",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9337:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9337:15:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9337:15:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "9372:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9375:4:7",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9365:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9365:15:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9365:15:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9268:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9261:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9261:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9258:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9399:14:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9408:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9411:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9404:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9404:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9399:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9233:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9236:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "9242:1:7",
                "type": ""
              }
            ],
            "src": "9202:217:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9488:358:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9498:16:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9513:1:7",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "9502:7:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9523:16:7",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "9532:7:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9523:5:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9548:13:7",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "9556:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "9548:4:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9612:228:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9657:22:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9659:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9659:18:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9659:18:7"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9632:4:7"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9646:1:7",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "9642:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9642:6:7"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "9650:4:7"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "9638:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9638:17:7"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "9629:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9629:27:7"
                        },
                        "nodeType": "YulIf",
                        "src": "9626:2:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9718:29:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9720:25:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "9733:5:7"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "9740:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "9729:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9729:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "9720:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9699:8:7"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "9709:7:7"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9695:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9695:22:7"
                        },
                        "nodeType": "YulIf",
                        "src": "9692:2:7"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9760:23:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9772:4:7"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9778:4:7"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "9768:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9768:15:7"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "9760:4:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9796:34:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "9812:7:7"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9821:8:7"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "9808:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9808:22:7"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "9796:8:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9581:8:7"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "9591:7:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9578:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9578:21:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9600:3:7",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9574:3:7",
                    "statements": []
                  },
                  "src": "9570:270:7"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "9452:5:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9459:8:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9472:5:7",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9479:4:7",
                "type": ""
              }
            ],
            "src": "9424:422:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9921:61:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9931:45:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9961:4:7"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9967:8:7"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "9940:20:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9940:36:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9931:5:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9892:4:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9898:8:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9911:5:7",
                "type": ""
              }
            ],
            "src": "9851:131:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10046:747:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10084:52:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10098:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10107:1:7",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10098:5:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10121:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10066:8:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10059:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10059:16:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10056:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10169:52:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10183:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10192:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10183:5:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10206:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10155:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10148:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10148:12:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10145:2:7"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10257:52:7",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10271:10:7",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10280:1:7",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10271:5:7"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10294:5:7"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10250:59:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10255:1:7",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10325:123:7",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10360:22:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10362:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10362:18:7"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10362:18:7"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10345:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10355:3:7",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10342:2:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10342:17:7"
                            },
                            "nodeType": "YulIf",
                            "src": "10339:2:7"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "10395:25:7",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10408:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10418:1:7",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10404:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10404:16:7"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10395:5:7"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10433:5:7"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10318:130:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10323:1:7",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "10237:4:7"
                  },
                  "nodeType": "YulSwitch",
                  "src": "10230:218:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10546:70:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10560:28:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10573:4:7"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10579:8:7"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "10569:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10569:19:7"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10560:5:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10601:5:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "10470:4:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10476:2:7",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10467:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10467:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "10484:8:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10494:2:7",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10481:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10481:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10463:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10463:35:7"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "10507:4:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10513:3:7",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10504:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10504:13:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "10522:8:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10532:2:7",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10519:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10519:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10500:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10500:36:7"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "10460:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10460:77:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10457:2:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10625:57:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10667:4:7"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10673:8:7"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "10648:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10648:34:7"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "10629:7:7",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "10638:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10727:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10729:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10729:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10729:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "10697:7:7"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10714:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "10710:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10710:6:7"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "10718:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "10706:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10706:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10694:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10694:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10691:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10758:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "10771:7:7"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "10780:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10767:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10767:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10758:5:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10017:4:7",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10023:8:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10036:5:7",
                "type": ""
              }
            ],
            "src": "9987:806:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10850:116:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10909:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10911:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10911:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10911:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10881:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10874:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10874:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10867:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10867:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10889:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10900:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10896:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10896:6:7"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10904:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10892:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10892:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10886:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10886:21:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10863:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10863:45:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10860:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10940:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10955:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10958:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10951:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10951:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10940:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10829:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10832:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10838:7:7",
                "type": ""
              }
            ],
            "src": "10798:168:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11020:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11042:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11044:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11044:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11044:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11036:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11039:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11033:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11033:8:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11030:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11073:17:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11085:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11088:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11081:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11081:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11073:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11002:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11005:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11011:4:7",
                "type": ""
              }
            ],
            "src": "10971:125:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11154:205:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11164:10:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11173:1:7",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11168:1:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11233:63:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11258:3:7"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "11263:1:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11254:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11254:11:7"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "11277:3:7"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11282:1:7"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11273:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11273:11:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "11267:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11267:18:7"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11247:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11247:39:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11247:39:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11194:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11197:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11191:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11191:13:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11205:19:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11207:15:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11216:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11219:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11212:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11212:10:7"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11207:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11187:3:7",
                    "statements": []
                  },
                  "src": "11183:113:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11322:31:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11335:3:7"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11340:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11331:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11331:16:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11349:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11324:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11324:27:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11324:27:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11311:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11314:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11308:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11308:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11305:2:7"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11132:3:7",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11137:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11142:6:7",
                "type": ""
              }
            ],
            "src": "11101:258:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11419:325:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11429:22:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11443:1:7",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11446:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "11439:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11439:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "11429:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11460:38:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11490:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11496:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11486:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11486:12:7"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "11464:18:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11537:31:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11539:27:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "11553:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11561:4:7",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11549:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11549:17:7"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11539:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11517:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11510:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11510:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11507:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11627:111:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11648:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11655:3:7",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11660:10:7",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11651:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11651:20:7"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11641:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11641:31:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11641:31:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11692:1:7",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11695:4:7",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11685:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11685:15:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11685:15:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11720:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11723:4:7",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11713:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11713:15:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11713:15:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11583:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11606:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11614:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11603:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11603:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11580:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11580:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11577:2:7"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "11399:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11408:6:7",
                "type": ""
              }
            ],
            "src": "11364:380:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11781:95:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11798:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11805:3:7",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11810:10:7",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11801:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11801:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11791:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11791:31:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11791:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11838:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11841:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11831:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11831:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11831:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11862:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11865:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11855:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11855:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11855:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11749:127:7"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$826__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "255:2059:0:-:0;;;409:370;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1906:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1906:113:1;;;;1972:13;;1906:113;;;1972:13;;:5;;:13;:::i;:::-;-1:-1:-1;1995:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;600:9:0::1;:30:::0;;-1:-1:-1;;;;;600:30:0;;::::1;-1:-1:-1::0;;;;;;600:30:0;;::::1;::::0;::::1;::::0;;;641:7:::1;:26:::0;;;;::::1;::::0;;;::::1;;::::0;;693:28:::1;::::0;;-1:-1:-1;;;693:28:0;;;;600:30;;-1:-1:-1;693:26:0::1;::::0;:28:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;600:30;693:28;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:43;;:12;:43;;;;751:8;-1:-1:-1::0;;;;;745:24:0::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;732:39;;:10;:39:::0;-1:-1:-1;255:2059:0;;-1:-1:-1;255:2059:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;255:2059:0;;;-1:-1:-1;255:2059:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:7;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:303::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:2;;;357:6;349;342:22;304:2;385:40;415:9;385:40;:::i;:::-;375:50;;444:49;489:2;478:9;474:18;444:49;:::i;:::-;434:59;;294:205;;;;;:::o;504:293::-;572:6;625:2;613:9;604:7;600:23;596:32;593:2;;;646:6;638;631:22;593:2;683:9;677:16;733:4;726:5;722:16;715:5;712:27;702:2;;758:6;750;743:22;702:2;786:5;583:214;-1:-1:-1;;;583:214:7:o;802:380::-;881:1;877:12;;;;924;;;945:2;;999:4;991:6;987:17;977:27;;945:2;1052;1044:6;1041:14;1021:18;1018:38;1015:2;;;1098:10;1093:3;1089:20;1086:1;1079:31;1133:4;1130:1;1123:15;1161:4;1158:1;1151:15;1015:2;;857:325;;;:::o;:::-;255:2059:0;;;;;;",
  "deployedSourceMap": "255:2059:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;:::i;:::-;;:::i;:::-;;;2880:14:7;;2873:22;2855:41;;2843:2;2828:18;4181:166:1;2810:92:7;826:218:0;;;;;;:::i;:::-;;:::i;:::-;;3172:106:1;3259:12;;3172:106;;;8844:25:7;;;8832:2;8817:18;3172:106:1;8799:76:7;4814:478:1;;;;;;:::i;:::-;;:::i;3021:91::-;;;3103:2;9022:36:7;;9010:2;8995:18;3021:91:1;8977:87:7;1345:248:0;;;;;;:::i;:::-;;:::i;5687:212:1:-;;;;;;:::i;:::-;;:::i;1642:296:0:-;;;;;;:::i;:::-;;:::i;1093:203::-;;;;;;:::i;:::-;;:::i;347:24::-;;;;;;3336:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:1;3410:7;3436:18;;;;;;;;;;;;3336:125;289:23:0;;;;;-1:-1:-1;;;;;289:23:0;;;;;;-1:-1:-1;;;;;3085:32:7;;;3067:51;;3055:2;3040:18;289:23:0;3022:102:7;378:22:0;;;;;;2295:102:1;;;:::i;6386:405::-;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;3894:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:1;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;319:21:0;;;;;-1:-1:-1;;;;;319:21:0;;;2084:98:1;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:6;4303:7:1;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:1;4181:166;;;;;:::o;826:218:0:-;928:7;;901:71;;-1:-1:-1;;;;;928:7:0;937:10;957:4;964:7;901:26;:71::i;:::-;1010:26;1016:10;1028:7;1010:5;:26::i;:::-;826:218;:::o;4814:478:1:-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:1;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:6;5040:33:1;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:1;;5743:2:7;5083:79:1;;;5725:21:7;5782:2;5762:18;;;5755:30;5821:34;5801:18;;;5794:62;-1:-1:-1;;;5872:18:7;;;5865:38;5920:19;;5083:79:1;;;;;;;;;5196:57;5205:6;666:10:6;5246:6:1;5227:16;:25;5196:8;:57::i;:::-;5281:4;5274:11;;;4814:478;;;;;;:::o;1345:248:0:-;1421:26;1427:10;1439:7;1421:5;:26::i;:::-;1512:9;;1550:10;;1562:12;;1489:96;;-1:-1:-1;;;;;1512:9:0;;1523:10;;1535:49;;1550:10;1576:7;1535:14;:49::i;:::-;1489:22;:96::i;5687:212:1:-;666:10:6;5775:4:1;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:1;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;1642:296:0:-;1750:9;;1723:73;;-1:-1:-1;;;;;1750:9:0;1761:10;1781:4;1788:7;1723:26;:73::i;:::-;1859:7;;1895:12;;1909:10;;1836:94;;-1:-1:-1;;;;;1859:7:0;;1868:10;;1880:49;;1895:12;1921:7;1880:14;:49::i;1093:203::-;1170:26;1176:10;1188:7;1170:5;:26::i;:::-;1259:7;;1236:52;;-1:-1:-1;;;;;1259:7:0;1268:10;1280:7;1236:22;:52::i;2295:102:1:-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:6;6479:4:1;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:1;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:1;;8134:2:7;6566:85:1;;;8116:21:7;8173:2;8153:18;;;8146:30;8212:34;8192:18;;;8185:62;-1:-1:-1;;;8263:18:7;;;8256:35;8308:19;;6566:85:1;8106:227:7;6566:85:1;6685:67;666:10:6;6708:7:1;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:1;;6386:405;-1:-1:-1;;;6386:405:1:o;3664:172::-;3750:4;3766:42;666:10:6;3790:9:1;3801:6;3766:9;:42::i;9962:370::-;-1:-1:-1;;;;;10093:19:1;;10085:68;;;;-1:-1:-1;;;10085:68:1;;6960:2:7;10085:68:1;;;6942:21:7;6999:2;6979:18;;;6972:30;7038:34;7018:18;;;7011:62;-1:-1:-1;;;7089:18:7;;;7082:34;7133:19;;10085:68:1;6932:226:7;10085:68:1;-1:-1:-1;;;;;10171:21:1;;10163:68;;;;-1:-1:-1;;;10163:68:1;;4526:2:7;10163:68:1;;;4508:21:7;4565:2;4545:18;;;4538:30;4604:34;4584:18;;;4577:62;-1:-1:-1;;;4655:18:7;;;4648:32;4697:19;;10163:68:1;4498:224:7;10163:68:1;-1:-1:-1;;;;;10242:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;8844:25:7;;;10293:32:1;;8817:18:7;10293:32:1;;;;;;;;9962:370;;;:::o;845:241:4:-;1010:68;;-1:-1:-1;;;;;2314:15:7;;;1010:68:4;;;2296:34:7;2366:15;;2346:18;;;2339:43;2398:18;;;2391:34;;;983:96:4;;1003:5;;-1:-1:-1;;;1033:27:4;2231:18:7;;1010:68:4;;;;-1:-1:-1;;1010:68:4;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:68:4;-1:-1:-1;;;;;;1010:68:4;;;;;;;;;;983:19;:96::i;:::-;845:241;;;;:::o;8254:389:1:-;-1:-1:-1;;;;;8337:21:1;;8329:65;;;;-1:-1:-1;;;8329:65:1;;8540:2:7;8329:65:1;;;8522:21:7;8579:2;8559:18;;;8552:30;8618:33;8598:18;;;8591:61;8669:18;;8329:65:1;8512:181:7;8329:65:1;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8497:18:1;;:9;:18;;;;;;;;;;:28;;8519:6;;8497:9;:28;;8519:6;;8497:28;:::i;:::-;;;;-1:-1:-1;;8540:37:1;;8844:25:7;;;-1:-1:-1;;;;;8540:37:1;;;8557:1;;8540:37;;8832:2:7;8817:18;8540:37:1;;;;;;;8254:389;;:::o;7265:713::-;-1:-1:-1;;;;;7400:20:1;;7392:70;;;;-1:-1:-1;;;7392:70:1;;6554:2:7;7392:70:1;;;6536:21:7;6593:2;6573:18;;;6566:30;6632:34;6612:18;;;6605:62;-1:-1:-1;;;6683:18:7;;;6676:35;6728:19;;7392:70:1;6526:227:7;7392:70:1;-1:-1:-1;;;;;7480:23:1;;7472:71;;;;-1:-1:-1;;;7472:71:1;;3719:2:7;7472:71:1;;;3701:21:7;3758:2;3738:18;;;3731:30;3797:34;3777:18;;;3770:62;-1:-1:-1;;;3848:18:7;;;3841:33;3891:19;;7472:71:1;3691:225:7;7472:71:1;-1:-1:-1;;;;;7636:17:1;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:1;;4929:2:7;7663:74:1;;;4911:21:7;4968:2;4948:18;;;4941:30;5007:34;4987:18;;;4980:62;-1:-1:-1;;;5058:18:7;;;5051:36;5104:19;;7663:74:1;4901:228:7;7663:74:1;-1:-1:-1;;;;;7771:17:1;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:1;7888:6;-1:-1:-1;;;;;7879:35:1;;7907:6;7879:35;;;;8844:25:7;;8832:2;8817:18;;8799:76;7879:35:1;;;;;;;;7925:46;8963:576;;-1:-1:-1;;;;;9046:21:1;;9038:67;;;;-1:-1:-1;;;9038:67:1;;6152:2:7;9038:67:1;;;6134:21:7;6191:2;6171:18;;;6164:30;6230:34;6210:18;;;6203:62;-1:-1:-1;;;6281:18:7;;;6274:31;6322:19;;9038:67:1;6124:223:7;9038:67:1;-1:-1:-1;;;;;9201:18:1;;9176:22;9201:18;;;;;;;;;;;9237:24;;;;9229:71;;;;-1:-1:-1;;;9229:71:1;;4123:2:7;9229:71:1;;;4105:21:7;4162:2;4142:18;;;4135:30;4201:34;4181:18;;;4174:62;-1:-1:-1;;;4252:18:7;;;4245:32;4294:19;;9229:71:1;4095:224:7;9229:71:1;-1:-1:-1;;;;;9334:18:1;;:9;:18;;;;;;;;;;9355:23;;;9334:44;;9398:12;:22;;9372:6;;9334:9;9398:22;;9372:6;;9398:22;:::i;:::-;;;;-1:-1:-1;;9436:37:1;;8844:25:7;;;9462:1:1;;-1:-1:-1;;;;;9436:37:1;;;;;8832:2:7;8817:18;9436:37:1;8799:76:7;9484:48:1;8963:576;;;:::o;1946:365:0:-;2045:4;2082:11;2066:13;:27;2062:217;;;2127:27;2143:11;2127:13;:27;:::i;:::-;2120:35;;:2;:35;:::i;:::-;2109:46;;;;:::i;:::-;;;2062:217;;;2193:11;2177:13;:27;2173:106;;;2239:27;2253:13;2239:11;:27;:::i;:::-;2232:35;;:2;:35;:::i;:::-;2221:46;;;;:::i;:::-;;;2173:106;-1:-1:-1;2296:7:0;1946:365;-1:-1:-1;;1946:365:0:o;634:205:4:-;773:58;;-1:-1:-1;;;;;2628:32:7;;773:58:4;;;2610:51:7;2677:18;;;2670:34;;;746:86:4;;766:5;;-1:-1:-1;;;796:23:4;2583:18:7;;773:58:4;2565:145:7;3140:706:4;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:4;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:4;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:4;;7723:2:7;3744:85:4;;;7705:21:7;7762:2;7742:18;;;7735:30;7801:34;7781:18;;;7774:62;-1:-1:-1;;;7852:18:7;;;7845:40;7902:19;;3744:85:4;7695:232:7;3461:223:5;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:5:o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:5;;5336:2:7;4737:81:5;;;5318:21:7;5375:2;5355:18;;;5348:30;5414:34;5394:18;;;5387:62;-1:-1:-1;;;5465:18:7;;;5458:36;5511:19;;4737:81:5;5308:228:7;4737:81:5;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:5;;7365:2:7;4828:60:5;;;7347:21:7;7404:2;7384:18;;;7377:30;7443:31;7423:18;;;7416:59;7492:18;;4828:60:5;7337:179:7;4828:60:5;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:5;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:5:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:5;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7619:145;7809:12;7802:20;;-1:-1:-1;;;7802:20:5;;;;;;;;:::i;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:7:o;1280:297::-;1347:6;1400:2;1388:9;1379:7;1375:23;1371:32;1368:2;;;1421:6;1413;1406:22;1368:2;1458:9;1452:16;1511:5;1504:13;1497:21;1490:5;1487:32;1477:2;;1538:6;1530;1523:22;1582:190;1641:6;1694:2;1682:9;1673:7;1669:23;1665:32;1662:2;;;1715:6;1707;1700:22;1662:2;-1:-1:-1;1743:23:7;;1652:120;-1:-1:-1;1652:120:7:o;1777:274::-;1906:3;1944:6;1938:13;1960:53;2006:6;2001:3;1994:4;1986:6;1982:17;1960:53;:::i;:::-;2029:16;;;;;1914:137;-1:-1:-1;;1914:137:7:o;3129:383::-;3278:2;3267:9;3260:21;3241:4;3310:6;3304:13;3353:6;3348:2;3337:9;3333:18;3326:34;3369:66;3428:6;3423:2;3412:9;3408:18;3403:2;3395:6;3391:15;3369:66;:::i;:::-;3496:2;3475:15;-1:-1:-1;;3471:29:7;3456:45;;;;3503:2;3452:54;;3250:262;-1:-1:-1;;3250:262:7:o;9069:128::-;9109:3;9140:1;9136:6;9133:1;9130:13;9127:2;;;9146:18;;:::i;:::-;-1:-1:-1;9182:9:7;;9117:80::o;9202:217::-;9242:1;9268;9258:2;;-1:-1:-1;;;9293:31:7;;9347:4;9344:1;9337:15;9375:4;9300:1;9365:15;9258:2;-1:-1:-1;9404:9:7;;9248:171::o;9424:422::-;9513:1;9556:5;9513:1;9570:270;9591:7;9581:8;9578:21;9570:270;;;9650:4;9646:1;9642:6;9638:17;9632:4;9629:27;9626:2;;;9659:18;;:::i;:::-;9709:7;9699:8;9695:22;9692:2;;;9729:16;;;;9692:2;9808:22;;;;9768:15;;;;9570:270;;;9574:3;9488:358;;;;;:::o;9851:131::-;9911:5;9940:36;9967:8;9961:4;10036:5;10066:8;10056:2;;-1:-1:-1;10107:1:7;10121:5;;10056:2;10155:4;10145:2;;-1:-1:-1;10192:1:7;10206:5;;10145:2;10237:4;10255:1;10250:59;;;;10323:1;10318:130;;;;10230:218;;10250:59;10280:1;10271:10;;10294:5;;;10318:130;10355:3;10345:8;10342:17;10339:2;;;10362:18;;:::i;:::-;-1:-1:-1;;10418:1:7;10404:16;;10433:5;;10230:218;;10532:2;10522:8;10519:16;10513:3;10507:4;10504:13;10500:36;10494:2;10484:8;10481:16;10476:2;10470:4;10467:12;10463:35;10460:77;10457:2;;;-1:-1:-1;10569:19:7;;;10601:5;;10457:2;10648:34;10673:8;10667:4;10648:34;:::i;:::-;10718:6;10714:1;10710:6;10706:19;10697:7;10694:32;10691:2;;;10729:18;;:::i;:::-;10767:20;;10046:747;-1:-1:-1;;;10046:747:7:o;10798:168::-;10838:7;10904:1;10900;10896:6;10892:14;10889:1;10886:21;10881:1;10874:9;10867:17;10863:45;10860:2;;;10911:18;;:::i;:::-;-1:-1:-1;10951:9:7;;10850:116::o;10971:125::-;11011:4;11039:1;11036;11033:8;11030:2;;;11044:18;;:::i;:::-;-1:-1:-1;11081:9:7;;11020:76::o;11101:258::-;11173:1;11183:113;11197:6;11194:1;11191:13;11183:113;;;11273:11;;;11267:18;11254:11;;;11247:39;11219:2;11212:10;11183:113;;;11314:6;11311:1;11308:13;11305:2;;;-1:-1:-1;;11349:1:7;11331:16;;11324:27;11154:205::o;11364:380::-;11443:1;11439:12;;;;11486;;;11507:2;;11561:4;11553:6;11549:17;11539:27;;11507:2;11614;11606:6;11603:14;11583:18;11580:38;11577:2;;;11660:10;11655:3;11651:20;11648:1;11641:31;11695:4;11692:1;11685:15;11723:4;11720:1;11713:15;11577:2;;11419:325;;;:::o;11749:127::-;11810:10;11805:3;11801:20;11798:1;11791:31;11841:4;11838:1;11831:15;11865:4;11862:1;11855:15",
  "source": "// contracts/Messages.sol\r\n// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Migrator is ERC20 {\r\n    IERC20 public fromAsset;\r\n    IERC20 public toAsset;\r\n    uint public fromDecimals;\r\n    uint public toDecimals;\r\n\r\n    constructor (\r\n        address _fromAsset,\r\n        address _toAsset\r\n    )\r\n    // LP shares track the underlying toToken amount\r\n    ERC20(\"Token Migration Pool\", \"Migrator-LP\") {\r\n        fromAsset = IERC20(_fromAsset);\r\n        toAsset = IERC20(_toAsset);\r\n        fromDecimals = ERC20(_fromAsset).decimals();\r\n        toDecimals = ERC20(_toAsset).decimals();\r\n    }\r\n\r\n    // _amount denominated in toAsset\r\n    function add(uint _amount) external {\r\n        // deposit toAsset\r\n        SafeERC20.safeTransferFrom(toAsset, msg.sender, address(this), _amount);\r\n        // mint LP shares\r\n        _mint(msg.sender, _amount);\r\n    }\r\n\r\n    // _amount denominated in LP shares\r\n    function remove(uint _amount) external {\r\n        // burn LP shares\r\n        _burn(msg.sender, _amount);\r\n        // send out toAsset\r\n        SafeERC20.safeTransfer(toAsset, msg.sender, _amount);\r\n    }\r\n\r\n    // _amount denominated in LP shares\r\n    function claim(uint _amount) external {\r\n        // burn LP shares\r\n        _burn(msg.sender, _amount);\r\n        // send out fromAsset\r\n        SafeERC20.safeTransfer(fromAsset, msg.sender, adjustDecimals(toDecimals, fromDecimals, _amount));\r\n    }\r\n\r\n    // _amount denominated in fromToken\r\n    function migrate(uint _amount) external {\r\n        // deposit fromAsset\r\n        SafeERC20.safeTransferFrom(fromAsset, msg.sender, address(this), _amount);\r\n        // send out toAsset\r\n        SafeERC20.safeTransfer(toAsset, msg.sender, adjustDecimals(fromDecimals, toDecimals, _amount));\r\n    }\r\n\r\n    function adjustDecimals(uint _fromDecimals, uint _toDecimals, uint _amount) internal pure returns (uint) {\r\n        if (_fromDecimals > _toDecimals){\r\n            _amount /= 10 ** (_fromDecimals - _toDecimals);\r\n        } else if (_fromDecimals < _toDecimals) {\r\n            _amount *= 10 ** (_toDecimals - _fromDecimals);\r\n        }\r\n        return _amount;\r\n    }\r\n}",
  "sourcePath": "/home/atlas-bridge/ethereum/contracts/bridge/utils/Migrator.sol",
  "ast": {
    "absolutePath": "/home/atlas-bridge/ethereum/contracts/bridge/utils/Migrator.sol",
    "exportedSymbols": {
      "Address": [
        1372
      ],
      "Context": [
        1394
      ],
      "ERC20": [
        748
      ],
      "IERC20": [
        826
      ],
      "IERC20Metadata": [
        851
      ],
      "Migrator": [
        202
      ],
      "SafeERC20": [
        1075
      ]
    },
    "id": 203,
    "license": "Apache 2",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 203,
        "sourceUnit": 749,
        "src": "129:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 203,
        "sourceUnit": 1076,
        "src": "186:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 748,
              "src": "276:5:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "276:5:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 202,
        "linearizedBaseContracts": [
          202,
          748,
          851,
          826,
          1394
        ],
        "name": "Migrator",
        "nameLocation": "264:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "86e89843",
            "id": 9,
            "mutability": "mutable",
            "name": "fromAsset",
            "nameLocation": "303:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "289:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$826",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 826,
                "src": "289:6:0"
              },
              "referencedDeclaration": 826,
              "src": "289:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$826",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f1354c08",
            "id": 12,
            "mutability": "mutable",
            "name": "toAsset",
            "nameLocation": "333:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "319:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$826",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 826,
                "src": "319:6:0"
              },
              "referencedDeclaration": 826,
              "src": "319:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$826",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4d92626a",
            "id": 14,
            "mutability": "mutable",
            "name": "fromDecimals",
            "nameLocation": "359:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "347:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "347:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "92e40411",
            "id": 16,
            "mutability": "mutable",
            "name": "toDecimals",
            "nameLocation": "390:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "378:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "378:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "589:190:0",
              "statements": [
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "fromAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "600:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29,
                          "name": "_fromAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "619:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "612:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$826_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "612:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "600:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$826",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "600:30:0"
                },
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33,
                      "name": "toAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "641:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35,
                          "name": "_toAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "658:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "651:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$826_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "651:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "641:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$826",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "641:26:0"
                },
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "678:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 41,
                              "name": "_fromAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "699:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "693:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$748_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "693:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$748",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 277,
                        "src": "693:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "693:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "678:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "678:43:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "732:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 49,
                              "name": "_toAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "751:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 48,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "745:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$748_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "745:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$748",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 277,
                        "src": "745:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "745:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "732:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "732:39:0"
                }
              ]
            },
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e204d6967726174696f6e20506f6f6c",
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "550:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b7581d2db82d686fb6640cb1bc1a42697c4e8af03ce403e1ff83bc6764947338",
                      "typeString": "literal_string \"Token Migration Pool\""
                    },
                    "value": "Token Migration Pool"
                  },
                  {
                    "hexValue": "4d69677261746f722d4c50",
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "574:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d22ab9410c85ca9187d0c61d998cc712aa7d733ffd448fbf289492037e66a5e",
                      "typeString": "literal_string \"Migrator-LP\""
                    },
                    "value": "Migrator-LP"
                  }
                ],
                "id": 25,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 22,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 748,
                  "src": "544:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "544:44:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_fromAsset",
                  "nameLocation": "440:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "432:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_toAsset",
                  "nameLocation": "469:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "461:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:63:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:0"
            },
            "scope": 202,
            "src": "409:370:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "862:182:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "928:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 65,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "937:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "937:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 69,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "957:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$202",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$202",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "949:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "949:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "949:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 71,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "964:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "901:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 908,
                      "src": "901:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "901:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 75,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1016:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1016:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1028:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 608,
                      "src": "1010:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:26:0"
                }
              ]
            },
            "functionSelector": "1003e2d2",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "835:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "844:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "839:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:14:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:0"
            },
            "scope": 202,
            "src": "826:218:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1132:164:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1176:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1176:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1188:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "1170:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1259:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1268:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1268:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1280:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 92,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "1236:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "1236:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:52:0"
                }
              ]
            },
            "functionSelector": "4cc82215",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "1102:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1114:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1109:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1108:14:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:0:0"
            },
            "scope": 202,
            "src": "1093:203:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1383:210:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1427:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1427:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1439:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 107,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "1421:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1512:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1523:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1523:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 120,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1550:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 121,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1562:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 122,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104,
                            "src": "1576:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 119,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "1535:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1535:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 113,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "1489:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "1489:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1489:96:0"
                }
              ]
            },
            "functionSelector": "379607f5",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1354:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1365:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1360:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:14:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:0"
            },
            "scope": 202,
            "src": "1345:248:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1682:256:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1750:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1761:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1761:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1781:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$202",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$202",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1773:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1773:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1773:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 142,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1788:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 132,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "1723:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 908,
                      "src": "1723:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1723:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1723:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1859:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 149,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1868:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1868:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 152,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1895:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 153,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1909:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 154,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1921:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 151,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "1880:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1880:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 145,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "1836:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "1836:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:94:0"
                }
              ]
            },
            "functionSelector": "454b0608",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "1651:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1664:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1659:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1658:14:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1682:0:0"
            },
            "scope": 202,
            "src": "1642:296:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "2051:260:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 170,
                      "name": "_fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "2066:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 171,
                      "name": "_toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "2082:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2066:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 183,
                        "name": "_fromDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "2177:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 184,
                        "name": "_toDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2193:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2177:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 196,
                    "nodeType": "IfStatement",
                    "src": "2173:106:0",
                    "trueBody": {
                      "id": 195,
                      "nodeType": "Block",
                      "src": "2206:73:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 186,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "2221:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "*=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2232:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 190,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 188,
                                      "name": "_toDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 163,
                                      "src": "2239:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 189,
                                      "name": "_fromDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 161,
                                      "src": "2253:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2239:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 191,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2238:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2232:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2221:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 194,
                          "nodeType": "ExpressionStatement",
                          "src": "2221:46:0"
                        }
                      ]
                    }
                  },
                  "id": 197,
                  "nodeType": "IfStatement",
                  "src": "2062:217:0",
                  "trueBody": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "2094:73:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 173,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "2109:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2120:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 175,
                                    "name": "_fromDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "2127:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 176,
                                    "name": "_toDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 163,
                                    "src": "2143:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2127:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 178,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2126:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2120:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2109:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 181,
                        "nodeType": "ExpressionStatement",
                        "src": "2109:46:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 198,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 165,
                    "src": "2296:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 169,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "2289:14:0"
                }
              ]
            },
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustDecimals",
            "nameLocation": "1955:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_fromDecimals",
                  "nameLocation": "1975:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1970:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "_toDecimals",
                  "nameLocation": "1995:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1990:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2013:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2008:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1969:52:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2045:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2044:6:0"
            },
            "scope": 202,
            "src": "1946:365:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 203,
        "src": "255:2059:0",
        "usedErrors": []
      }
    ],
    "src": "67:2247:0"
  },
  "legacyAST": {
    "absolutePath": "/home/atlas-bridge/ethereum/contracts/bridge/utils/Migrator.sol",
    "exportedSymbols": {
      "Address": [
        1372
      ],
      "Context": [
        1394
      ],
      "ERC20": [
        748
      ],
      "IERC20": [
        826
      ],
      "IERC20Metadata": [
        851
      ],
      "Migrator": [
        202
      ],
      "SafeERC20": [
        1075
      ]
    },
    "id": 203,
    "license": "Apache 2",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 203,
        "sourceUnit": 749,
        "src": "129:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 203,
        "sourceUnit": 1076,
        "src": "186:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 748,
              "src": "276:5:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "276:5:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 202,
        "linearizedBaseContracts": [
          202,
          748,
          851,
          826,
          1394
        ],
        "name": "Migrator",
        "nameLocation": "264:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "86e89843",
            "id": 9,
            "mutability": "mutable",
            "name": "fromAsset",
            "nameLocation": "303:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "289:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$826",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 826,
                "src": "289:6:0"
              },
              "referencedDeclaration": 826,
              "src": "289:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$826",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f1354c08",
            "id": 12,
            "mutability": "mutable",
            "name": "toAsset",
            "nameLocation": "333:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "319:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$826",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 826,
                "src": "319:6:0"
              },
              "referencedDeclaration": 826,
              "src": "319:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$826",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4d92626a",
            "id": 14,
            "mutability": "mutable",
            "name": "fromDecimals",
            "nameLocation": "359:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "347:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "347:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "92e40411",
            "id": 16,
            "mutability": "mutable",
            "name": "toDecimals",
            "nameLocation": "390:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "378:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "378:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "589:190:0",
              "statements": [
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "fromAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "600:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29,
                          "name": "_fromAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "619:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "612:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$826_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "612:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "600:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$826",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "600:30:0"
                },
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33,
                      "name": "toAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "641:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35,
                          "name": "_toAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "658:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "651:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$826_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "651:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "641:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$826",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "641:26:0"
                },
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "678:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 41,
                              "name": "_fromAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "699:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "693:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$748_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "693:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$748",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 277,
                        "src": "693:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "693:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "678:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "678:43:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "732:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 49,
                              "name": "_toAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "751:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 48,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "745:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$748_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "745:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$748",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 277,
                        "src": "745:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "745:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "732:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "732:39:0"
                }
              ]
            },
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e204d6967726174696f6e20506f6f6c",
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "550:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b7581d2db82d686fb6640cb1bc1a42697c4e8af03ce403e1ff83bc6764947338",
                      "typeString": "literal_string \"Token Migration Pool\""
                    },
                    "value": "Token Migration Pool"
                  },
                  {
                    "hexValue": "4d69677261746f722d4c50",
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "574:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d22ab9410c85ca9187d0c61d998cc712aa7d733ffd448fbf289492037e66a5e",
                      "typeString": "literal_string \"Migrator-LP\""
                    },
                    "value": "Migrator-LP"
                  }
                ],
                "id": 25,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 22,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 748,
                  "src": "544:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "544:44:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_fromAsset",
                  "nameLocation": "440:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "432:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_toAsset",
                  "nameLocation": "469:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "461:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:63:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:0"
            },
            "scope": 202,
            "src": "409:370:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "862:182:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "928:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 65,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "937:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "937:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 69,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "957:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$202",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$202",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "949:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "949:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "949:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 71,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "964:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "901:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 908,
                      "src": "901:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "901:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 75,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1016:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1016:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1028:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 608,
                      "src": "1010:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:26:0"
                }
              ]
            },
            "functionSelector": "1003e2d2",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "835:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "844:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "839:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:14:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:0"
            },
            "scope": 202,
            "src": "826:218:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1132:164:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1176:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1176:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1188:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "1170:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1259:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1268:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1268:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1280:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 92,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "1236:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "1236:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:52:0"
                }
              ]
            },
            "functionSelector": "4cc82215",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "1102:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1114:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1109:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1108:14:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:0:0"
            },
            "scope": 202,
            "src": "1093:203:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1383:210:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1427:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1427:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1439:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 107,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "1421:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1512:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1523:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1523:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 120,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1550:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 121,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1562:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 122,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104,
                            "src": "1576:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 119,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "1535:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1535:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 113,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "1489:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "1489:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1489:96:0"
                }
              ]
            },
            "functionSelector": "379607f5",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1354:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1365:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1360:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:14:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:0"
            },
            "scope": 202,
            "src": "1345:248:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1682:256:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1750:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1761:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1761:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1781:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$202",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$202",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1773:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1773:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1773:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 142,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1788:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 132,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "1723:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 908,
                      "src": "1723:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1723:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1723:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1859:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 149,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1868:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1868:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 152,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1895:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 153,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1909:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 154,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1921:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 151,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "1880:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1880:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$826",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 145,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "1836:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1075_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "1836:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$826_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:94:0"
                }
              ]
            },
            "functionSelector": "454b0608",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "1651:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1664:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1659:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1658:14:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1682:0:0"
            },
            "scope": 202,
            "src": "1642:296:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "2051:260:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 170,
                      "name": "_fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "2066:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 171,
                      "name": "_toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "2082:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2066:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 183,
                        "name": "_fromDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "2177:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 184,
                        "name": "_toDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2193:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2177:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 196,
                    "nodeType": "IfStatement",
                    "src": "2173:106:0",
                    "trueBody": {
                      "id": 195,
                      "nodeType": "Block",
                      "src": "2206:73:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 186,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "2221:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "*=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2232:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 190,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 188,
                                      "name": "_toDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 163,
                                      "src": "2239:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 189,
                                      "name": "_fromDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 161,
                                      "src": "2253:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2239:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 191,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2238:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2232:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2221:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 194,
                          "nodeType": "ExpressionStatement",
                          "src": "2221:46:0"
                        }
                      ]
                    }
                  },
                  "id": 197,
                  "nodeType": "IfStatement",
                  "src": "2062:217:0",
                  "trueBody": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "2094:73:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 173,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "2109:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2120:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 175,
                                    "name": "_fromDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "2127:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 176,
                                    "name": "_toDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 163,
                                    "src": "2143:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2127:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 178,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2126:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2120:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2109:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 181,
                        "nodeType": "ExpressionStatement",
                        "src": "2109:46:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 198,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 165,
                    "src": "2296:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 169,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "2289:14:0"
                }
              ]
            },
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustDecimals",
            "nameLocation": "1955:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_fromDecimals",
                  "nameLocation": "1975:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1970:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "_toDecimals",
                  "nameLocation": "1995:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1990:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2013:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2008:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1969:52:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2045:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2044:6:0"
            },
            "scope": 202,
            "src": "1946:365:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 203,
        "src": "255:2059:0",
        "usedErrors": []
      }
    ],
    "src": "67:2247:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-10-15T08:53:29.584Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}